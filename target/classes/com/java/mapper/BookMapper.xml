<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.java.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="com.java.entity.Book" >
    <id column="bookid" property="bookid" jdbcType="INTEGER" />
    <result column="bookname" property="bookname" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="pubtime" property="pubtime" jdbcType="DATE" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="typeid" property="typeid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bookid, bookname, price, pubtime, author, typeid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.java.entity.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book
    where bookid = #{bookid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where bookid = #{bookid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.java.entity.BookExample" >
    delete from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
    <delete id="deleteChecked">

      DELETE FROM book WHERE bookid IN
      <foreach collection="array" item="bookid" open="(" separator="," close=")">
        #{bookid}
      </foreach>
    </delete>


  <delete id="batDelete">
    DELETE FROM book WHERE bookid IN
    <foreach collection="array" open="(" close=")" separator="," item="bookid">
      #{bookid}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.java.entity.Book" >
    insert into book (bookid, bookname, price, 
      pubtime, author, typeid
      )
    values (#{bookid,jdbcType=INTEGER}, #{bookname,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{pubtime,jdbcType=DATE}, #{author,jdbcType=VARCHAR}, #{typeid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.java.entity.Book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookid != null" >
        bookid,
      </if>
      <if test="bookname != null" >
        bookname,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="pubtime != null" >
        pubtime,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="typeid != null" >
        typeid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookid != null" >
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="pubtime != null" >
        #{pubtime,jdbcType=DATE},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.java.entity.BookExample" resultType="java.lang.Integer" >
    select count(*) from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book
    <set >
      <if test="record.bookid != null" >
        bookid = #{record.bookid,jdbcType=INTEGER},
      </if>
      <if test="record.bookname != null" >
        bookname = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.pubtime != null" >
        pubtime = #{record.pubtime,jdbcType=DATE},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.typeid != null" >
        typeid = #{record.typeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book
    set bookid = #{record.bookid,jdbcType=INTEGER},
      bookname = #{record.bookname,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      pubtime = #{record.pubtime,jdbcType=DATE},
      author = #{record.author,jdbcType=VARCHAR},
      typeid = #{record.typeid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.java.entity.Book" >
    update book
    <set >
      <if test="bookname != null" >
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="pubtime != null" >
        pubtime = #{pubtime,jdbcType=DATE},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        typeid = #{typeid,jdbcType=INTEGER},
      </if>
    </set>
    where bookid = #{bookid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.java.entity.Book" >
    update book
    set bookname = #{bookname,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      pubtime = #{pubtime,jdbcType=DATE},
      author = #{author,jdbcType=VARCHAR},
      typeid = #{typeid,jdbcType=INTEGER}
    where bookid = #{bookid,jdbcType=INTEGER}
  </update>
</mapper>